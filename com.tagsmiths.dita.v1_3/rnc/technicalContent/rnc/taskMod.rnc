# 
# =============================================================
#                    HEADER                                    
# =============================================================
#  MODULE:    DITA Task                                        
#  VERSION:   1.3                                              
#  DATE:      March 2014                                    
#                                                              
# =============================================================
# 
# =============================================================
#                    PUBLIC DOCUMENT TYPE DEFINITION           
#                    TYPICAL INVOCATION                        
#                                                              
#  Refer to this file by the following public identifier or an 
#       appropriate system identifier 
# PUBLIC "-//OASIS//ELEMENTS DITA Task//EN"
#       Delivered as file "task.mod"                                
# 
# =============================================================
# SYSTEM:     Darwin Information Typing Architecture (DITA)    
#                                                              
# PURPOSE:    Declaring the elements and specialization        
#             attributes for the DITA Tasks                    
#                                                              
# ORIGINAL CREATION DATE:                                      
#             March 2001                                       
#                                                              
#             (C) Copyright OASIS Open 2005, 2009.             
#             (C) Copyright IBM Corporation 2001, 2004.        
#             All Rights Reserved.                             
#                                                              
#  UPDATES:                                                    
#    2005.11.15 RDA: Removed old declaration for               
#                    taskClasses entity                        
#    2005.11.15 RDA: Corrected LONG NAME for chdeschd          
#    2006.06.06 RDA: Changed model of choice to listitem.cnt   
#                    for completeness                          
#    2006.06.07 RDA: Added <abstract> element                  
#    2006.06.07 RDA: Make universal attributes universal       
#                      (DITA 1.1 proposal #12)                 
#    2006.11.30 RDA: Add -dita-use-conref-target to enumerated 
#                      attributes                              
#    2006.11.30 RDA: Remove #FIXED from DITAArchVersion        
#    2007.12.01 EK:  Reformatted DTD modules for DITA 1.2       
#    2008.01.30 RDA: Replace @conref defn. with %conref-atts;  
#    2008.02.06 RDA: Add note and itemgroup to step, substep   
#    2008.02.06 RDA: Loosen content model of taskbody; add     
#                    process and stepsection elements          
#    2008.02.13 RDA: Create .content and .attributes entities  
#    2008.05.06 RDA: Added sectiondiv to section specializations
#    2008.12.02 RDA: Rename process to steps-informal          
#    2014.04.16 WEK: Redefined as RNG          
# =============================================================
# 
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace dita = "http://dita.oasis-open.org/architecture/2005/"

task = task.element
taskbody = taskbody.element
steps = steps.element
steps-unordered = steps-unordered.element
step = step.element
stepsection = stepsection.element
cmd = cmd.element
substeps = substeps.element
substep = substep.element
tutorialinfo = tutorialinfo.element
info = info.element
stepxmp = stepxmp.element
stepresult = stepresult.element
steptroubleshooting = steptroubleshooting.element
choices = choices.element
choice = choice.element
steps-informal = steps-informal.element
result = result.element
tasktroubleshooting = tasktroubleshooting.element
prereq = prereq.element
postreq = postreq.element
context = context.element
choicetable = choicetable.element
chhead = chhead.element
chrow = chrow.element
choptionhd = choptionhd.element
chdeschd = chdeschd.element
choption = choption.element
chdesc = chdesc.element
univ-atts-no-importance-task = id-atts, filter-atts, 
attribute base { text}?, base-attribute-extensions, 
attribute rev { text}?, 
attribute status {("new" | "changed" | "deleted" | "unchanged" | "-dita-use-conref-target")}?, localization-atts
task-info-types = info-types
task.content = title, titlealts?, (abstract | shortdesc)?, prolog?, taskbody?, related-links?, task-info-types*
task.attributes = 
attribute id { xsd:ID}, conref-atts, select-atts, localization-atts, 
attribute outputclass { text}?
task.element = 
element task {task.attlist, task.content}
task.attlist &= task.attributes, arch-atts, 
attribute domains { text}?
taskbody.content = (prereq | context | section)*, (steps | steps-unordered | steps-informal)?, result?, tasktroubleshooting?, example*, postreq*
taskbody.attributes = id-atts, localization-atts, 
attribute base { text}?, base-attribute-extensions, 
attribute outputclass { text}?
taskbody.element = 
element taskbody {taskbody.attlist, taskbody.content}
taskbody.attlist &= taskbody.attributes
prereq.content = section.notitle.cnt*
prereq.attributes = univ-atts, 
attribute outputclass { text}?
prereq.element = 
element prereq {prereq.attlist, prereq.content}
prereq.attlist &= prereq.attributes
context.content = section.notitle.cnt*
context.attributes = univ-atts, 
attribute outputclass { text}?
context.element = 
element context {context.attlist, context.content}
context.attlist &= context.attributes
steps-informal.content = section.notitle.cnt*
steps-informal.attributes = univ-atts, 
attribute outputclass { text}?
steps-informal.element = 
element steps-informal {steps-informal.attlist, steps-informal.content}
steps-informal.attlist &= steps-informal.attributes
steps.content = (data | data-about)*, stepsection?, (step)+
steps.attributes = univ-atts, 
attribute outputclass { text}?
steps.element = 
element steps {steps.attlist, steps.content}
steps.attlist &= steps.attributes
steps-unordered.content = (data | data-about)*, stepsection?, (step)+
steps-unordered.attributes = univ-atts, 
attribute outputclass { text}?
steps-unordered.element = 
element steps-unordered {steps-unordered.attlist, steps-unordered.content}
steps-unordered.attlist &= steps-unordered.attributes
stepsection.content = listitem.cnt*
stepsection.attributes = univ-atts, 
attribute outputclass { text}?
stepsection.element = 
element stepsection {stepsection.attlist, stepsection.content}
stepsection.attlist &= stepsection.attributes
step.content = note*, cmd, (choices | choicetable | info | itemgroup | stepxmp | substeps | tutorialinfo)*, stepresult?, steptroubleshooting?
step.attributes = 
attribute importance {("optional" | "required" | "-dita-use-conref-target")}?, univ-atts-no-importance-task, 
attribute outputclass { text}?
step.element = 
element step {step.attlist, step.content}
step.attlist &= step.attributes
cmd.content = ph.cnt*
cmd.attributes = 
attribute keyref { text}?, univ-atts, 
attribute outputclass { text}?
cmd.element = 
element cmd {cmd.attlist, cmd.content}
cmd.attlist &= cmd.attributes
info.content = itemgroup.cnt*
info.attributes = univ-atts, 
attribute outputclass { text}?
info.element = 
element info {info.attlist, info.content}
info.attlist &= info.attributes
substeps.content = (data | data-about)*, substep+
substeps.attributes = univ-atts, 
attribute outputclass { text}?
substeps.element = 
element substeps {substeps.attlist, substeps.content}
substeps.attlist &= substeps.attributes
substep.content = note*, cmd, (info | itemgroup | stepxmp | tutorialinfo)*, stepresult?
substep.attributes = 
attribute importance {("optional" | "required" | "-dita-use-conref-target")}?, univ-atts-no-importance-task, 
attribute outputclass { text}?
substep.element = 
element substep {substep.attlist, substep.content}
substep.attlist &= substep.attributes
tutorialinfo.content = itemgroup.cnt*
tutorialinfo.attributes = univ-atts, 
attribute outputclass { text}?
tutorialinfo.element = 
element tutorialinfo {tutorialinfo.attlist, tutorialinfo.content}
tutorialinfo.attlist &= tutorialinfo.attributes
stepxmp.content = itemgroup.cnt*
stepxmp.attributes = univ-atts, 
attribute outputclass { text}?
stepxmp.element = 
element stepxmp {stepxmp.attlist, stepxmp.content}
stepxmp.attlist &= stepxmp.attributes
choices.content = (data | data-about)*, choice+
choices.attributes = univ-atts, 
attribute outputclass { text}?
choices.element = 
element choices {choices.attlist, choices.content}
choices.attlist &= choices.attributes
choice.content = listitem.cnt*
choice.attributes = univ-atts, 
attribute outputclass { text}?
choice.element = 
element choice {choice.attlist, choice.content}
choice.attlist &= choice.attributes
choicetable.content = chhead?, chrow+
choicetable.attributes = 
attribute relcolwidth { text}?, 
attribute keycol { xsd:NMTOKEN}?, 
attribute refcols { xsd:NMTOKENS}?, 
attribute spectitle { text}?, display-atts, univ-atts, 
attribute outputclass { text}?
choicetable.element = 
element choicetable {choicetable.attlist, choicetable.content}
choicetable.attlist &= choicetable.attributes
chhead.content = choptionhd, chdeschd
chhead.attributes = univ-atts, 
attribute outputclass { text}?
chhead.element = 
element chhead {chhead.attlist, chhead.content}
chhead.attlist &= chhead.attributes
choptionhd.content = tblcell.cnt*
choptionhd.attributes = 
attribute specentry { text}?, univ-atts, 
attribute outputclass { text}?
choptionhd.element = 
element choptionhd {choptionhd.attlist, choptionhd.content}
choptionhd.attlist &= choptionhd.attributes
chdeschd.content = tblcell.cnt*
chdeschd.attributes = 
attribute specentry { text}?, univ-atts, 
attribute outputclass { text}?
chdeschd.element = 
element chdeschd {chdeschd.attlist, chdeschd.content}
chdeschd.attlist &= chdeschd.attributes
chrow.content = choption, chdesc
chrow.attributes = univ-atts, 
attribute outputclass { text}?
chrow.element = 
element chrow {chrow.attlist, chrow.content}
chrow.attlist &= chrow.attributes
choption.content = tblcell.cnt*
choption.attributes = 
attribute specentry { text}?, univ-atts, 
attribute outputclass { text}?
choption.element = 
element choption {choption.attlist, choption.content}
choption.attlist &= choption.attributes
chdesc.content = tblcell.cnt*
chdesc.attributes = 
attribute specentry { text}?, univ-atts, 
attribute outputclass { text}?
chdesc.element = 
element chdesc {chdesc.attlist, chdesc.content}
chdesc.attlist &= chdesc.attributes
stepresult.content = itemgroup.cnt*
stepresult.attributes = univ-atts, 
attribute outputclass { text}?
stepresult.element = 
element stepresult {stepresult.attlist, stepresult.content}
stepresult.attlist &= stepresult.attributes
steptroubleshooting.content = itemgroup.cnt*
steptroubleshooting.attributes = univ-atts, 
attribute outputclass { text}?
steptroubleshooting.element = 
element steptroubleshooting {steptroubleshooting.attlist, steptroubleshooting.content}
steptroubleshooting.attlist &= steptroubleshooting.attributes
tasktroubleshooting.content = section.notitle.cnt*
tasktroubleshooting.attributes = univ-atts, 
attribute outputclass { text}?
tasktroubleshooting.element = 
element tasktroubleshooting {tasktroubleshooting.attlist, tasktroubleshooting.content}
tasktroubleshooting.attlist &= tasktroubleshooting.attributes
result.content = section.notitle.cnt*
result.attributes = univ-atts, 
attribute outputclass { text}?
result.element = 
element result {result.attlist, result.content}
result.attlist &= result.attributes
postreq.content = section.notitle.cnt*
postreq.attributes = univ-atts, 
attribute outputclass { text}?
postreq.element = 
element postreq {postreq.attlist, postreq.content}
postreq.attlist &= postreq.attributes
task.attlist &= global-atts, 
attribute class { text}?
taskbody.attlist &= global-atts, 
attribute class { text}?
steps.attlist &= global-atts, 
attribute class { text}?
steps-unordered.attlist &= global-atts, 
attribute class { text}?
stepsection.attlist &= global-atts, 
attribute class { text}?
step.attlist &= global-atts, 
attribute class { text}?
cmd.attlist &= global-atts, 
attribute class { text}?
substeps.attlist &= global-atts, 
attribute class { text}?
substep.attlist &= global-atts, 
attribute class { text}?
tutorialinfo.attlist &= global-atts, 
attribute class { text}?
info.attlist &= global-atts, 
attribute class { text}?
stepxmp.attlist &= global-atts, 
attribute class { text}?
stepresult.attlist &= global-atts, 
attribute class { text}?
steptroubleshooting.attlist &= global-atts, 
attribute class { text}?
choices.attlist &= global-atts, 
attribute class { text}?
choice.attlist &= global-atts, 
attribute class { text}?
result.attlist &= global-atts, 
attribute class { text}?
tasktroubleshooting.attlist &= global-atts, 
attribute class { text}?
prereq.attlist &= global-atts, 
attribute class { text}?
postreq.attlist &= global-atts, 
attribute class { text}?
context.attlist &= global-atts, 
attribute class { text}?
steps-informal.attlist &= global-atts, 
attribute class { text}?
choicetable.attlist &= global-atts, 
attribute class { text}?
chhead.attlist &= global-atts, 
attribute class { text}?
chrow.attlist &= global-atts, 
attribute class { text}?
choptionhd.attlist &= global-atts, 
attribute class { text}?
chdeschd.attlist &= global-atts, 
attribute class { text}?
choption.attlist &= global-atts, 
attribute class { text}?
chdesc.attlist &= global-atts, 
attribute class { text}?