# 
# =============================================================
#                    HEADER                                    
# =============================================================
#  MODULE:    XML EXCHANGE TABLE MODEL DECLARATION MODULE      
#  VERSION:   1.2                                              
#  DATE:      November 2009                                    
#                                                              
# =============================================================
# 
#             (C) Copyright OASIS Open 2005, 2009.             
#             (C) Copyright IBM Corporation 2001, 2004.        
#             All Rights Reserved.                             
#                                                              
#  UPDATES:                                                    
#    2005.11.15 RDA: Corrected the "Delivered as" system ID    
#    2006.06.07 RDA: Make universal attributes universal       
#                      (DITA 1.1 proposal #12)                 
#    2006.11.30 RDA: Add -dita-use-conref-target to enumerated 
#                      attributes                              
#    2008.02.13 RDA: Create .content and .attributes entities; 
#                    requires reorganization of some existing  
#                    entities provided with the Exchange Model 
# 
# =============================================================
#  Delivered as file "tblDecl.mod"                             
# =============================================================
# 
# 
# XML EXCHANGE TABLE MODEL DECLARATION MODULE                  
# 
# OASIS DITA 1.0 notes:
#      The Exchange Table Model replaces the original CALS-based model
#      used in development versions of the DITA definition.
#      This set of declarations defines the XML version of the Exchange
#      Table Model as adapted for OASIS DITA version 1.0.
#      The base for the DITA version of the Exchange Table Model is
#      defined at http://www.oasis-open.org/specs/tm9901.htm .
#      The DITA version specifically extends this model with these DITA-
#      specific content and attribute adaptations to the DITA processing
#      requirements:
# 
# STRUCTURE:
# 
# Introduce the DITA-unique <desc> element (optional after <title>); this element
# enables more consistent presentation of both figures and tables.
# 
# 
# ATTRIBUTES:
# 
# For frame, align, and valign attributes on any element:
#   Add the enumerated value -dita-use-conref-target for DITA 1.1.  
# 
# For the <table> element, add:
#   %univ-atts; which consists of:
#     %select-atts; [for selection, conditional processing]
#     %id-atts; [for conref and linking]
#     %localization-atts (@translate + @xml:lang) [for NLS processing support]
#     %global-atts; (@xtrf + @xtrc) [for tracing and messaging support in processors]
#     @class [for specialization support]
#   @outputclass [for role designation (ie, styles, future migrations)]
#   @rowheader [for accessibility support in processing]
#   %display-atts; which consists of:
#     @scale [for presentational equivalence with other scaled exhibits: fig, pre, lines, simpletable]
#     @frame (already part of table)
#     @pgwide (already part of table, same intent as original @expanse)
# 
# For <tgroup>, <thead>, <tbody>, and <row>, add:
#   %univ-atts;
#   %global-atts;
#   @class
#   @outputclass [for role designation (ie, styles, future migrations)]
# 
# For <entry>, add:
#   %id-atts;
#   %global-atts
#   @class
#   @outputclass [for role designation (ie, styles, future migrations)]
#   @rev [for indication of revised content for flag-based processing]
# 
#  
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace dita = "http://dita.oasis-open.org/architecture/2005/"

yesorno =  xsd:NMTOKEN
titles = title?
paracon = tblcell.cnt
tbl.table.name = "table"
tbl.table-titles.mdl = title?, desc?
tbl.table-main.mdl = tgroup+
tbl.table.mdl = tbl.table-titles.mdl, tbl.table-main.mdl
tbl.table.att = 
attribute pgwide {yesorno}?
bodyatt =  empty 
tbl.tgroup.mdl = colspec*, thead?, tbody
tbl.tgroup.att =  empty 
tbl.thead.att =  empty 
tbl.tbody.att =  empty 
tbl.colspec.att = 
attribute base { text}?, base-attribute-extensions
tbl.row.mdl = entry+
tbl.row.att =  empty 
tbl.entry.mdl = paracon*
tbl.entry.att = 
attribute base { text}?, base-attribute-extensions
dita.table.attributes = 
attribute orient {("port" | "land" | "-dita-use-conref-target")}?, 
attribute rowheader {("firstcol" | "headers" | "norowheader" | "-dita-use-conref-target")}?, 
attribute scale {("50" | "60" | "70" | "80" | "90" | "100" | "110" | "120" | "140" | "160" | "180" | "200" | "-dita-use-conref-target")}?, univ-atts, 
attribute outputclass { text}?
dita.tgroup.attributes = univ-atts, 
attribute outputclass { text}?
dita.thead.attributes = univ-atts, 
attribute outputclass { text}?
dita.tbody.attributes = univ-atts, 
attribute outputclass { text}?
dita.row.attributes = univ-atts, 
attribute outputclass { text}?
dita.entry.attributes = id-atts, localization-atts, 
attribute rotate {yesorno}?, 
attribute rev { text}?, 
attribute outputclass { text}?, 
attribute scope {("row" | "col" | "rowgroup" | "colgroup" | "-dita-use-conref-target")}?, 
attribute headers { xsd:NMTOKENS}?
dita.colspec.attributes = id-atts, localization-atts
table.content = tbl.table.mdl
table.attributes = 
attribute frame {("top" | "bottom" | "topbot" | "all" | "sides" | "none" | "-dita-use-conref-target")}?, 
attribute colsep {yesorno}?, 
attribute rowsep {yesorno}?, tbl.table.att, bodyatt, dita.table.attributes
table.element = 
element table {table.attlist, table.content}
table.attlist &= table.attributes
tgroup.content = tbl.tgroup.mdl
tgroup.attributes = 
attribute cols { xsd:NMTOKEN}, 
attribute colsep {yesorno}?, 
attribute rowsep {yesorno}?, 
attribute align {("left" | "right" | "center" | "justify" | "char" | "-dita-use-conref-target")}?, tbl.tgroup.att, dita.tgroup.attributes
tgroup.element = 
element tgroup {tgroup.attlist, tgroup.content}
tgroup.attlist &= tgroup.attributes
colspec.content =  empty 
colspec.attributes = 
attribute colnum { xsd:NMTOKEN}?, 
attribute colname { xsd:NMTOKEN}?, 
attribute colwidth { text}?, 
attribute colsep {yesorno}?, 
attribute rowsep {yesorno}?, 
attribute align {("left" | "right" | "center" | "justify" | "char" | "-dita-use-conref-target")}?, 
attribute char { text}?, 
attribute charoff { xsd:NMTOKEN}?, 
attribute rowheader {("firstcol" | "headers" | "norowheader" | "-dita-use-conref-target")}?, tbl.colspec.att, dita.colspec.attributes
colspec.element = 
element colspec {colspec.attlist, colspec.content}
colspec.attlist &= colspec.attributes
thead.content = row+
thead.attributes = 
attribute valign {("top" | "middle" | "bottom" | "-dita-use-conref-target")}?, tbl.thead.att, dita.thead.attributes
thead.element = 
element thead {thead.attlist, thead.content}
thead.attlist &= thead.attributes
tbody.content = row+
tbody.attributes = 
attribute valign {("top" | "middle" | "bottom" | "-dita-use-conref-target")}?, tbl.tbody.att, dita.tbody.attributes
tbody.element = 
element tbody {tbody.attlist, tbody.content}
tbody.attlist &= tbody.attributes
row.content = tbl.row.mdl
row.attributes = 
attribute rowsep {yesorno}?, 
attribute valign {("top" | "middle" | "bottom" | "-dita-use-conref-target")}?, tbl.row.att, dita.row.attributes
row.element = 
element row {row.attlist, row.content}
row.attlist &= row.attributes
entry.content = tbl.entry.mdl
entry.attributes = 
attribute colname { xsd:NMTOKEN}?, 
attribute namest { xsd:NMTOKEN}?, 
attribute nameend { xsd:NMTOKEN}?, 
attribute morerows { xsd:NMTOKEN}?, 
attribute colsep {yesorno}?, 
attribute rowsep {yesorno}?, 
attribute align {("left" | "right" | "center" | "justify" | "char" | "-dita-use-conref-target")}?, 
attribute char { text}?, 
attribute charoff { xsd:NMTOKEN}?, 
attribute valign {("top" | "middle" | "bottom" | "-dita-use-conref-target")}?, tbl.entry.att, dita.entry.attributes
entry.element = 
element entry {entry.attlist, entry.content}
entry.attlist &= entry.attributes
table.attlist &= global-atts, 
attribute class { text}?
tgroup.attlist &= global-atts, 
attribute class { text}?
colspec.attlist &= global-atts, 
attribute class { text}?
thead.attlist &= global-atts, 
attribute class { text}?
tbody.attlist &= global-atts, 
attribute class { text}?
row.attlist &= global-atts, 
attribute class { text}?
entry.attlist &= global-atts, 
attribute class { text}?