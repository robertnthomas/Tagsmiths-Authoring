# 
# =============================================================
#                    HEADER                                    
# =============================================================
#  MODULE:    Task Requirements Domain                         
#  VERSION:   1.2                                              
#  DATE:      November 2009                                    
#                                                              
# =============================================================
# 
# =============================================================
#                    PUBLIC DOCUMENT TYPE DEFINITION           
#                    TYPICAL INVOCATION                        
#                                                              
#  Refer to this file by the following public identfier or an 
#       appropriate system identifier 
# PUBLIC "-//OASIS//ELEMENTS DITA Task Requirements Domain//EN"
#       Delivered as file "taskreqDomain.mod"                       
# 
# =============================================================
# SYSTEM:     Darwin Information Typing Architecture (DITA)    
#                                                              
# PURPOSE:    Define elements and specialization attributes   
#             for the Task Requirements Domain                 
#                                                              
# ORIGINAL CREATION DATE:                                      
#             September 2007                                   
#                                                              
#             (C) Copyright OASIS Open 2007, 2009.             
#             All Rights Reserved.                             
#  UPDATES:                                                    
#    2009.10.20 CHK: Make safecond unbound              
# =============================================================
#   
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace dita = "http://dita.oasis-open.org/architecture/2005/"

taskreq-d-prereq = prelreqs.element
taskreq-d-postreq = closereqs.element
prereq |= taskreq-d-prereq
postreq |= taskreq-d-postreq
prelreqs = prelreqs.element
closereqs = closereqs.element
reqconds = reqconds.element
noconds = noconds.element
reqcond = reqcond.element
reqcontp = reqcontp.element
reqpers = reqpers.element
personnel = personnel.element
perscat = perscat.element
perskill = perskill.element
esttime = esttime.element
supequip = supequip.element
nosupeq = nosupeq.element
supeqli = supeqli.element
supequi = supequi.element
supplies = supplies.element
nosupply = nosupply.element
supplyli = supplyli.element
supply = supply.element
spares = spares.element
nospares = nospares.element
sparesli = sparesli.element
spare = spare.element
safety = safety.element
nosafety = nosafety.element
safecond = safecond.element
prelreqs.content = reqconds?, reqpers?, supequip?, supplies?, spares?, safety?
prelreqs.attributes = univ-atts, 
attribute outputclass { text}?
prelreqs.element = 
element prelreqs {prelreqs.attlist, prelreqs.content}
prelreqs.attlist &= prelreqs.attributes
closereqs.content = reqconds
closereqs.attributes = univ-atts, 
attribute outputclass { text}?
closereqs.element = 
element closereqs {closereqs.attlist, closereqs.content}
closereqs.attlist &= closereqs.attributes
reqconds.content = (data | data-about)*, (noconds | (reqcond | reqcontp)+)
reqconds.attributes = univ-atts, 
attribute outputclass { text}?
reqconds.element = 
element reqconds {reqconds.attlist, reqconds.content}
reqconds.attlist &= reqconds.attributes
noconds.content =  empty 
noconds.attributes = univ-atts, 
attribute outputclass { text}?
noconds.element = 
element noconds {noconds.attlist, noconds.content}
noconds.attlist &= noconds.attributes
reqcond.content = listitem.cnt*
reqcond.attributes = univ-atts, 
attribute outputclass { text}?
reqcond.element = 
element reqcond {reqcond.attlist, reqcond.content}
reqcond.attlist &= reqcond.attributes
reqcontp.content = listitem.cnt*
reqcontp.attributes = univ-atts, 
attribute outputclass { text}?
reqcontp.element = 
element reqcontp {reqcontp.attlist, reqcontp.content}
reqcontp.attlist &= reqcontp.attributes
reqpers.content = (data | data-about)*, personnel, perscat?, perskill?, esttime??+
reqpers.attributes = univ-atts, 
attribute outputclass { text}?
reqpers.element = 
element reqpers {reqpers.attlist, reqpers.content}
reqpers.attlist &= reqpers.attributes
personnel.content = listitem.cnt*
personnel.attributes = univ-atts, 
attribute outputclass { text}?
personnel.element = 
element personnel {personnel.attlist, personnel.content}
personnel.attlist &= personnel.attributes
perscat.content = listitem.cnt*
perscat.attributes = univ-atts, 
attribute outputclass { text}?
perscat.element = 
element perscat {perscat.attlist, perscat.content}
perscat.attlist &= perscat.attributes
perskill.content = listitem.cnt*
perskill.attributes = univ-atts, 
attribute outputclass { text}?
perskill.element = 
element perskill {perskill.attlist, perskill.content}
perskill.attlist &= perskill.attributes
esttime.content = listitem.cnt*
esttime.attributes = univ-atts, 
attribute outputclass { text}?
esttime.element = 
element esttime {esttime.attlist, esttime.content}
esttime.attlist &= esttime.attributes
supequip.content = (nosupeq | supeqli)
supequip.attributes = univ-atts, 
attribute outputclass { text}?
supequip.element = 
element supequip {supequip.attlist, supequip.content}
supequip.attlist &= supequip.attributes
nosupeq.content =  empty 
nosupeq.attributes = data-element-atts
nosupeq.element = 
element nosupeq {nosupeq.attlist, nosupeq.content}
nosupeq.attlist &= nosupeq.attributes
supeqli.content = (data | data-about)*, supequi+
supeqli.attributes = 
attribute compact {("yes" | "no" | "-dita-use-conref-target")}?, 
attribute spectitle { text}?, univ-atts, 
attribute outputclass { text}?
supeqli.element = 
element supeqli {supeqli.attlist, supeqli.content}
supeqli.attlist &= supeqli.attributes
supequi.content = listitem.cnt*
supequi.attributes = univ-atts, 
attribute outputclass { text}?
supequi.element = 
element supequi {supequi.attlist, supequi.content}
supequi.attlist &= supequi.attributes
supplies.content = (nosupply | supplyli)
supplies.attributes = univ-atts, 
attribute outputclass { text}?
supplies.element = 
element supplies {supplies.attlist, supplies.content}
supplies.attlist &= supplies.attributes
nosupply.content =  empty 
nosupply.attributes = data-element-atts
nosupply.element = 
element nosupply {nosupply.attlist, nosupply.content}
nosupply.attlist &= nosupply.attributes
supplyli.content = (data | data-about)*, supply+
supplyli.attributes = 
attribute compact {("yes" | "no" | "-dita-use-conref-target")}?, 
attribute spectitle { text}?, univ-atts, 
attribute outputclass { text}?
supplyli.element = 
element supplyli {supplyli.attlist, supplyli.content}
supplyli.attlist &= supplyli.attributes
supply.content = listitem.cnt*
supply.attributes = univ-atts, 
attribute outputclass { text}?
supply.element = 
element supply {supply.attlist, supply.content}
supply.attlist &= supply.attributes
spares.content = (nospares | sparesli)
spares.attributes = univ-atts, 
attribute outputclass { text}?
spares.element = 
element spares {spares.attlist, spares.content}
spares.attlist &= spares.attributes
nospares.content =  empty 
nospares.attributes = data-element-atts
nospares.element = 
element nospares {nospares.attlist, nospares.content}
nospares.attlist &= nospares.attributes
sparesli.content = (data | data-about)*, spare+
sparesli.attributes = 
attribute compact {("yes" | "no" | "-dita-use-conref-target")}?, 
attribute spectitle { text}?, univ-atts, 
attribute outputclass { text}?
sparesli.element = 
element sparesli {sparesli.attlist, sparesli.content}
sparesli.attlist &= sparesli.attributes
spare.content = listitem.cnt*
spare.attributes = univ-atts, 
attribute outputclass { text}?
spare.element = 
element spare {spare.attlist, spare.content}
spare.attlist &= spare.attributes
safety.content = (data | data-about)*, (nosafety | safecond+)
safety.attributes = univ-atts, 
attribute outputclass { text}?
safety.element = 
element safety {safety.attlist, safety.content}
safety.attlist &= safety.attributes
nosafety.content =  empty 
nosafety.attributes = univ-atts, 
attribute outputclass { text}?
nosafety.element = 
element nosafety {nosafety.attlist, nosafety.content}
nosafety.attlist &= nosafety.attributes
safecond.content = listitem.cnt*
safecond.attributes = univ-atts, 
attribute outputclass { text}?
safecond.element = 
element safecond {safecond.attlist, safecond.content}
safecond.attlist &= safecond.attributes
prelreqs.attlist &= global-atts, 
attribute class { text}?
closereqs.attlist &= global-atts, 
attribute class { text}?
reqconds.attlist &= global-atts, 
attribute class { text}?
noconds.attlist &= global-atts, 
attribute class { text}?
reqcond.attlist &= global-atts, 
attribute class { text}?
reqcontp.attlist &= global-atts, 
attribute class { text}?
reqpers.attlist &= global-atts, 
attribute class { text}?
personnel.attlist &= global-atts, 
attribute class { text}?
perscat.attlist &= global-atts, 
attribute class { text}?
perskill.attlist &= global-atts, 
attribute class { text}?
esttime.attlist &= global-atts, 
attribute class { text}?
supequip.attlist &= global-atts, 
attribute class { text}?
nosupeq.attlist &= global-atts, 
attribute class { text}?
supeqli.attlist &= global-atts, 
attribute class { text}?
supequi.attlist &= global-atts, 
attribute class { text}?
supplies.attlist &= global-atts, 
attribute class { text}?
nosupply.attlist &= global-atts, 
attribute class { text}?
supplyli.attlist &= global-atts, 
attribute class { text}?
supply.attlist &= global-atts, 
attribute class { text}?
spares.attlist &= global-atts, 
attribute class { text}?
nospares.attlist &= global-atts, 
attribute class { text}?
sparesli.attlist &= global-atts, 
attribute class { text}?
spare.attlist &= global-atts, 
attribute class { text}?
safety.attlist &= global-atts, 
attribute class { text}?
nosafety.attlist &= global-atts, 
attribute class { text}?
safecond.attlist &= global-atts, 
attribute class { text}?