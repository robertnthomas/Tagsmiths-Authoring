# 
# =============================================================
#                    HEADER                                    
# =============================================================
#  MODULE:    DITA Learning Map Domain                         
#  VERSION:   1.2                                              
#  DATE:      November 2009                                    
#                                                              
# =============================================================
# 
# =============================================================
#                    PUBLIC DOCUMENT TYPE DEFINITION           
#                    TYPICAL INVOCATION                        
#                                                              
#  Refer to this file by the following public identfier or an 
#       appropriate system identifier 
# PUBLIC "-//OASIS//ELEMENTS DITA Learning Map Domain//EN"
#       Delivered as file "learningMapDomain.mod"                   
# 
# =============================================================
# SYSTEM:     Darwin Information Typing Architecture (DITA)    
#                                                              
# PURPOSE:    Declaring the elements and specialization        
#             attributes for Learning Map Domain               
#                                                              
# ORIGINAL CREATION DATE:                                      
#             May 2007                                         
#                                                              
#             (C) Copyright OASIS Open 2007, 2009              
#             All Rights Reserved.                             
#                                                              
#                                                              
#  16 Aug 2009: WEK Added learningContentComponentRef per TC   
#  07 Dec 2009: RDA combined @id, conref-atts, select-atts, and
#               localization-atts into a single ref to univ-atts
#                                                              
#                                                              
# ============================================================= 
# 
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace dita = "http://dita.oasis-open.org/architecture/2005/"

learningmap-d-topicref = (learningObject.element | learningGroup.element | learningObjectMapRef.element | learningGroupMapRef.element)
topicref |= learningmap-d-topicref
learningObject = learningObject.element
learningObjectMapRef = learningObjectMapRef.element
learningGroupMapRef = learningGroupMapRef.element
learningOverviewRef = learningOverviewRef.element
learningPlanRef = learningPlanRef.element
learningContentRef = learningContentRef.element
learningContentComponentRef = learningContentComponentRef.element
learningSummaryRef = learningSummaryRef.element
learningPreAssessmentRef = learningPreAssessmentRef.element
learningPostAssessmentRef = learningPostAssessmentRef.element
learningGroup = learningGroup.element
learningDomain-topicref-atts-no-chunk = 
attribute navtitle { text}?, 
attribute href { text}?, 
attribute keyref { text}?, 
attribute keys { text}?, 
attribute keyscope { text}?, 
attribute query { text}?, 
attribute copy-to { text}?, 
attribute outputclass { text}?, 
attribute cascade { text}?, 
attribute scope {("external" | "local" | "peer" | "-dita-use-conref-target")}?, 
attribute processing-role {("normal" | "resource-only" | "-dita-use-conref-target")}?, 
attribute linking {("targetonly" | "sourceonly" | "normal" | "none" | "-dita-use-conref-target")}?, 
attribute locktitle {("yes" | "no" | "-dita-use-conref-target")}?, 
attribute toc {("yes" | "no" | "-dita-use-conref-target")}?, 
attribute print {("yes" | "no" | "printonly" | "-dita-use-conref-target")}?, 
attribute search {("yes" | "no" | "-dita-use-conref-target")}?, univ-atts
learningDomain-topicref-atts = learningDomain-topicref-atts-no-chunk, 
attribute chunk { text}?
learningDomain-mapref-atts = learningDomain-topicref-atts-no-chunk, 
attribute format { text}?
learningObjectComponent-topicref-atts = learningDomain-topicref-atts-no-chunk, 
attribute chunk { text}?
learningGroup.content = topicmeta?, learningPlanRef?, (learningOverviewRef | learningPreAssessmentRef)*, (learningObject | learningObjectMapRef | learningGroup | learningGroupMapRef)*, (learningPostAssessmentRef | learningSummaryRef)*
learningGroup.attributes = learningDomain-topicref-atts, 
attribute collection-type {("choice" | "unordered" | "sequence" | "family" | "-dita-use-conref-target")}?, 
attribute type { text}?, 
attribute format { text}?
learningGroup.element = 
element learningGroup {learningGroup.attlist, learningGroup.content}
learningGroup.attlist &= learningGroup.attributes
learningObject.content = topicmeta?, learningPlanRef?, (learningOverviewRef | learningPreAssessmentRef)*, learningContentRef+, (learningPostAssessmentRef | learningSummaryRef)*
learningObject.attributes = learningDomain-topicref-atts, 
attribute collection-type {("choice" | "unordered" | "sequence" | "family" | "-dita-use-conref-target")}?, 
attribute type { text}?, 
attribute format { text}?
learningObject.element = 
element learningObject {learningObject.attlist, learningObject.content}
learningObject.attlist &= learningObject.attributes
learningPlanRef.content = topicmeta?
learningPlanRef.attributes = learningObjectComponent-topicref-atts, 
attribute type { text}?, 
attribute format { text}?
learningPlanRef.element = 
element learningPlanRef {learningPlanRef.attlist, learningPlanRef.content}
learningPlanRef.attlist &= learningPlanRef.attributes
learningOverviewRef.content = topicmeta?
learningOverviewRef.attributes = learningObjectComponent-topicref-atts, 
attribute type { text}?, 
attribute format { text}?
learningOverviewRef.element = 
element learningOverviewRef {learningOverviewRef.attlist, learningOverviewRef.content}
learningOverviewRef.attlist &= learningOverviewRef.attributes
learningSummaryRef.content = topicmeta?
learningSummaryRef.attributes = learningObjectComponent-topicref-atts, 
attribute type { text}?, 
attribute format { text}?
learningSummaryRef.element = 
element learningSummaryRef {learningSummaryRef.attlist, learningSummaryRef.content}
learningSummaryRef.attlist &= learningSummaryRef.attributes
learningContentRef.content = topicmeta?, learningContentComponentRef*
learningContentRef.attributes = learningDomain-topicref-atts-no-chunk, 
attribute type { text}?, 
attribute format { text}?, 
attribute chunk { text}?
learningContentRef.element = 
element learningContentRef {learningContentRef.attlist, learningContentRef.content}
learningContentRef.attlist &= learningContentRef.attributes
learningContentComponentRef.content = topicmeta?, learningContentComponentRef*
learningContentComponentRef.attributes = learningDomain-topicref-atts, 
attribute type { text}?, 
attribute format { text}?
learningContentComponentRef.element = 
element learningContentComponentRef {learningContentComponentRef.attlist, learningContentComponentRef.content}
learningContentComponentRef.attlist &= learningContentComponentRef.attributes
learningPreAssessmentRef.content = topicmeta?
learningPreAssessmentRef.attributes = learningObjectComponent-topicref-atts, 
attribute type { text}?, 
attribute format { text}?
learningPreAssessmentRef.element = 
element learningPreAssessmentRef {learningPreAssessmentRef.attlist, learningPreAssessmentRef.content}
learningPreAssessmentRef.attlist &= learningPreAssessmentRef.attributes
learningPostAssessmentRef.content = topicmeta?
learningPostAssessmentRef.attributes = learningObjectComponent-topicref-atts, 
attribute type { text}?, 
attribute format { text}?
learningPostAssessmentRef.element = 
element learningPostAssessmentRef {learningPostAssessmentRef.attlist, learningPostAssessmentRef.content}
learningPostAssessmentRef.attlist &= learningPostAssessmentRef.attributes
learningGroupMapRef.content = topicmeta?
learningGroupMapRef.attributes = learningDomain-mapref-atts, 
attribute type { text}?
learningGroupMapRef.element = 
element learningGroupMapRef {learningGroupMapRef.attlist, learningGroupMapRef.content}
learningGroupMapRef.attlist &= learningGroupMapRef.attributes
learningObjectMapRef.content = topicmeta?
learningObjectMapRef.attributes = learningDomain-mapref-atts, 
attribute type { text}?
learningObjectMapRef.element = 
element learningObjectMapRef {learningObjectMapRef.attlist, learningObjectMapRef.content}
learningObjectMapRef.attlist &= learningObjectMapRef.attributes
learningObject.attlist &= global-atts, 
attribute class { text}?
learningGroup.attlist &= global-atts, 
attribute class { text}?
learningGroupMapRef.attlist &= global-atts, 
attribute class { text}?
learningObjectMapRef.attlist &= global-atts, 
attribute class { text}?
learningPlanRef.attlist &= global-atts, 
attribute class { text}?
learningOverviewRef.attlist &= global-atts, 
attribute class { text}?
learningContentRef.attlist &= global-atts, 
attribute class { text}?
learningContentComponentRef.attlist &= global-atts, 
attribute class { text}?
learningSummaryRef.attlist &= global-atts, 
attribute class { text}?
learningPreAssessmentRef.attlist &= global-atts, 
attribute class { text}?
learningPostAssessmentRef.attlist &= global-atts, 
attribute class { text}?