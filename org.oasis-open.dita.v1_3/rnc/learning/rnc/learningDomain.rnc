# 
# =============================================================
#                    HEADER                                    
# =============================================================
#  MODULE:    DITA Learning Domain                             
#  VERSION:   1.2                                              
#  DATE:      November 2009                                    
#                                                              
# =============================================================
# 
# =============================================================
#                    PUBLIC DOCUMENT TYPE DEFINITION           
#                    TYPICAL INVOCATION                        
#                                                              
#  Refer to this file by the following public identfier or an 
#       appropriate system identifier 
# PUBLIC "-//OASIS//ELEMENTS DITA Learning Domain//EN"
#       Delivered as file "learningDomain.mod"                     
# 
# =============================================================
# SYSTEM:     Darwin Information Typing Architecture (DITA)    
#                                                              
# PURPOSE:    Declaring the elements and specialization        
#             attributes for Learning Domain                   
#                                                              
# ORIGINAL CREATION DATE:                                      
#             May 2007                                         
#                                                              
#             (C) Copyright OASIS Open 2007, 2009.             
#             All Rights Reserved.                             
#                                                              
#  CHANGE LOG:                                                 
#                                                              
#    Sept 2009: WEK: added lcMatchingItemFeedback per          
#    TC decision.                                              
# =============================================================  
# 
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace dita = "http://dita.oasis-open.org/architecture/2005/"

learning-d-note = lcInstructornote.element
note |= learning-d-note
learning-d-fig = (lcTrueFalse.element | lcSingleSelect.element | lcMultipleSelect.element | lcSequencing.element | lcMatching.element | lcHotspot.element | lcOpenQuestion.element)
fig |= learning-d-fig
learning-d-lcInteractionBase = (lcTrueFalse.element | lcSingleSelect.element | lcMultipleSelect.element | lcSequencing.element | lcMatching.element | lcHotspot.element | lcOpenQuestion.element)
lcInteractionBase |= learning-d-lcInteractionBase
lcQuestion = lcQuestion.element
lcOpenAnswer = lcOpenAnswer.element
lcAnswerOptionGroup = lcAnswerOptionGroup.element
lcAsset = lcAsset.element
lcFeedbackCorrect = lcFeedbackCorrect.element
lcFeedbackIncorrect = lcFeedbackIncorrect.element
lcAnswerOption = lcAnswerOption.element
lcAnswerContent = lcAnswerContent.element
lcSequenceOptionGroup = lcSequenceOptionGroup.element
lcSequenceOption = lcSequenceOption.element
lcSequence = lcSequence.element
lcMatchTable = lcMatchTable.element
lcMatchingHeader = lcMatchingHeader.element
lcMatchingPair = lcMatchingPair.element
lcItem = lcItem.element
lcMatchingItem = lcMatchingItem.element
lcMatchingItemFeedback = lcMatchingItemFeedback.element
lcHotspotMap = lcHotspotMap.element
lcArea = lcArea.element
lcAreaShape = lcAreaShape.element
lcAreaCoords = lcAreaCoords.element
lcCorrectResponse = lcCorrectResponse.element
lcFeedback = lcFeedback.element
lcInstructornote.content = note.cnt*
lcInstructornote.attributes = 
attribute spectitle { text}?, univ-atts, 
attribute outputclass { text}?
lcInstructornote.element = 
element lcInstructornote {lcInstructornote.attlist, lcInstructornote.content}
lcInstructornote.attlist &= lcInstructornote.attributes
lcTrueFalse.content = title?, lcQuestion, lcAsset?, lcAnswerOptionGroup, lcFeedbackIncorrect?, lcFeedbackCorrect?, data*
lcTrueFalse.attributes = 
attribute id { xsd:NMTOKEN}, conref-atts, select-atts, localization-atts, 
attribute outputclass { text}?
lcTrueFalse.element = 
element lcTrueFalse {lcTrueFalse.attlist, lcTrueFalse.content}
lcTrueFalse.attlist &= lcTrueFalse.attributes
lcSingleSelect.content = title?, lcQuestion, lcAsset?, lcAnswerOptionGroup, lcFeedbackIncorrect?, lcFeedbackCorrect?, data*
lcSingleSelect.attributes = 
attribute id { xsd:NMTOKEN}, conref-atts, select-atts, localization-atts, 
attribute outputclass { text}?
lcSingleSelect.element = 
element lcSingleSelect {lcSingleSelect.attlist, lcSingleSelect.content}
lcSingleSelect.attlist &= lcSingleSelect.attributes
lcMultipleSelect.content = title?, lcQuestion, lcAsset?, lcAnswerOptionGroup, lcFeedbackIncorrect?, lcFeedbackCorrect?, data*
lcMultipleSelect.attributes = 
attribute id { xsd:NMTOKEN}, conref-atts, select-atts, localization-atts, 
attribute outputclass { text}?
lcMultipleSelect.element = 
element lcMultipleSelect {lcMultipleSelect.attlist, lcMultipleSelect.content}
lcMultipleSelect.attlist &= lcMultipleSelect.attributes
lcSequencing.content = title?, lcQuestion, lcAsset?, lcSequenceOptionGroup, lcFeedbackIncorrect?, lcFeedbackCorrect?, data*
lcSequencing.attributes = 
attribute id { xsd:NMTOKEN}, conref-atts, select-atts, localization-atts, 
attribute outputclass { text}?
lcSequencing.element = 
element lcSequencing {lcSequencing.attlist, lcSequencing.content}
lcSequencing.attlist &= lcSequencing.attributes
lcMatching.content = title?, lcQuestion, lcAsset?, lcMatchTable, lcFeedbackIncorrect?, lcFeedbackCorrect?, data*
lcMatching.attributes = 
attribute id { xsd:NMTOKEN}, conref-atts, select-atts, localization-atts, 
attribute outputclass { text}?
lcMatching.element = 
element lcMatching {lcMatching.attlist, lcMatching.content}
lcMatching.attlist &= lcMatching.attributes
lcHotspot.content = title?, lcQuestion, lcHotspotMap, lcFeedbackIncorrect?, lcFeedbackCorrect?, data*
lcHotspot.attributes = 
attribute id { xsd:NMTOKEN}, conref-atts, select-atts, localization-atts, 
attribute outputclass { text}?
lcHotspot.element = 
element lcHotspot {lcHotspot.attlist, lcHotspot.content}
lcHotspot.attlist &= lcHotspot.attributes
lcOpenQuestion.content = title?, lcQuestion, lcAsset?, lcOpenAnswer?, lcFeedbackIncorrect?, lcFeedbackCorrect?, data*
lcOpenQuestion.attributes = 
attribute id { xsd:NMTOKEN}, conref-atts, select-atts, localization-atts, 
attribute outputclass { text}?
lcOpenQuestion.element = 
element lcOpenQuestion {lcOpenQuestion.attlist, lcOpenQuestion.content}
lcOpenQuestion.attlist &= lcOpenQuestion.attributes
lcQuestion.content = ph.cnt*
lcQuestion.attributes = univ-atts, 
attribute outputclass { text}?
lcQuestion.element = 
element lcQuestion {lcQuestion.attlist, lcQuestion.content}
lcQuestion.attlist &= lcQuestion.attributes
lcOpenAnswer.content = ph.cnt*
lcOpenAnswer.attributes = univ-atts, 
attribute outputclass { text}?
lcOpenAnswer.element = 
element lcOpenAnswer {lcOpenAnswer.attlist, lcOpenAnswer.content}
lcOpenAnswer.attlist &= lcOpenAnswer.attributes
lcAnswerOptionGroup.content = (data | data-about)*, lcAnswerOption+
lcAnswerOptionGroup.attributes = univ-atts, 
attribute outputclass { text}?
lcAnswerOptionGroup.element = 
element lcAnswerOptionGroup {lcAnswerOptionGroup.attlist, lcAnswerOptionGroup.content}
lcAnswerOptionGroup.attlist &= lcAnswerOptionGroup.attributes
lcSequenceOptionGroup.content = (data | data-about)*, lcSequenceOption+
lcSequenceOptionGroup.attributes = univ-atts, 
attribute outputclass { text}?
lcSequenceOptionGroup.element = 
element lcSequenceOptionGroup {lcSequenceOptionGroup.attlist, lcSequenceOptionGroup.content}
lcSequenceOptionGroup.attlist &= lcSequenceOptionGroup.attributes
lcAsset.content = (imagemap | image | object)*
lcAsset.attributes = univ-atts, 
attribute outputclass { text}?
lcAsset.element = 
element lcAsset {lcAsset.attlist, lcAsset.content}
lcAsset.attlist &= lcAsset.attributes
lcSequenceOption.content = lcAnswerContent, lcSequence
lcSequenceOption.attributes = univ-atts, 
attribute outputclass { text}?
lcSequenceOption.element = 
element lcSequenceOption {lcSequenceOption.attlist, lcSequenceOption.content}
lcSequenceOption.attlist &= lcSequenceOption.attributes
lcFeedback.content = ph.cnt*
lcFeedback.attributes = univ-atts, 
attribute outputclass { text}?
lcFeedback.element = 
element lcFeedback {lcFeedback.attlist, lcFeedback.content}
lcFeedback.attlist &= lcFeedback.attributes
lcFeedbackCorrect.content = ph.cnt*
lcFeedbackCorrect.attributes = univ-atts, 
attribute outputclass { text}?
lcFeedbackCorrect.element = 
element lcFeedbackCorrect {lcFeedbackCorrect.attlist, lcFeedbackCorrect.content}
lcFeedbackCorrect.attlist &= lcFeedbackCorrect.attributes
lcFeedbackIncorrect.content = ph.cnt*
lcFeedbackIncorrect.attributes = univ-atts, 
attribute outputclass { text}?
lcFeedbackIncorrect.element = 
element lcFeedbackIncorrect {lcFeedbackIncorrect.attlist, lcFeedbackIncorrect.content}
lcFeedbackIncorrect.attlist &= lcFeedbackIncorrect.attributes
lcAnswerOption.content = lcAnswerContent, lcCorrectResponse?, lcFeedback?
lcAnswerOption.attributes = univ-atts, 
attribute outputclass { text}?
lcAnswerOption.element = 
element lcAnswerOption {lcAnswerOption.attlist, lcAnswerOption.content}
lcAnswerOption.attlist &= lcAnswerOption.attributes
lcAnswerContent.content = ph.cnt*
lcAnswerContent.attributes = univ-atts, 
attribute outputclass { text}?
lcAnswerContent.element = 
element lcAnswerContent {lcAnswerContent.attlist, lcAnswerContent.content}
lcAnswerContent.attlist &= lcAnswerContent.attributes
lcMatchTable.content = lcMatchingHeader?, lcMatchingPair+
lcMatchTable.attributes = univ-atts, 
attribute outputclass { text}?
lcMatchTable.element = 
element lcMatchTable {lcMatchTable.attlist, lcMatchTable.content}
lcMatchTable.attlist &= lcMatchTable.attributes
lcMatchingHeader.content = lcItem, lcMatchingItem
lcMatchingHeader.attributes = univ-atts, 
attribute outputclass { text}?
lcMatchingHeader.element = 
element lcMatchingHeader {lcMatchingHeader.attlist, lcMatchingHeader.content}
lcMatchingHeader.attlist &= lcMatchingHeader.attributes
lcMatchingPair.content = lcItem, lcMatchingItem, lcMatchingItemFeedback?
lcMatchingPair.attributes = univ-atts, 
attribute outputclass { text}?
lcMatchingPair.element = 
element lcMatchingPair {lcMatchingPair.attlist, lcMatchingPair.content}
lcMatchingPair.attlist &= lcMatchingPair.attributes
lcItem.content = ph.cnt*
lcItem.attributes = univ-atts, 
attribute outputclass { text}?
lcItem.element = 
element lcItem {lcItem.attlist, lcItem.content}
lcItem.attlist &= lcItem.attributes
lcMatchingItem.content = ph.cnt*
lcMatchingItem.attributes = univ-atts, 
attribute outputclass { text}?
lcMatchingItem.element = 
element lcMatchingItem {lcMatchingItem.attlist, lcMatchingItem.content}
lcMatchingItem.attlist &= lcMatchingItem.attributes
lcMatchingItemFeedback.content = (lcFeedback | lcFeedbackCorrect | lcFeedbackIncorrect)*
lcMatchingItemFeedback.attributes = univ-atts, 
attribute outputclass { text}?
lcMatchingItemFeedback.element = 
element lcMatchingItemFeedback {lcMatchingItemFeedback.attlist, lcMatchingItemFeedback.content}
lcMatchingItemFeedback.attlist &= lcMatchingItemFeedback.attributes
lcHotspotMap.content = image, lcArea+
lcHotspotMap.attributes = univ-atts, 
attribute outputclass { text}?
lcHotspotMap.element = 
element lcHotspotMap {lcHotspotMap.attlist, lcHotspotMap.content}
lcHotspotMap.attlist &= lcHotspotMap.attributes
lcArea.content = lcAreaShape, lcAreaCoords, xref?, lcCorrectResponse?, lcFeedback?
lcArea.attributes = univ-atts, 
attribute outputclass { text}?
lcArea.element = 
element lcArea {lcArea.attlist, lcArea.content}
lcArea.attlist &= lcArea.attributes
lcAreaShape.content = ( text  | \text)*
lcAreaShape.attributes = 
attribute keyref { text}?, univ-atts-translate-no, 
attribute outputclass { text}?
lcAreaShape.element = 
element lcAreaShape {lcAreaShape.attlist, lcAreaShape.content}
lcAreaShape.attlist &= lcAreaShape.attributes
lcAreaCoords.content = words.cnt*
lcAreaCoords.attributes = 
attribute keyref { text}?, univ-atts-translate-no, 
attribute outputclass { text}?
lcAreaCoords.element = 
element lcAreaCoords {lcAreaCoords.attlist, lcAreaCoords.content}
lcAreaCoords.attlist &= lcAreaCoords.attributes
lcCorrectResponse.content =  empty 
lcCorrectResponse.attributes = 
attribute name { text}?, 
attribute value { text}?, univ-atts, 
attribute outputclass { text}?
lcCorrectResponse.element = 
element lcCorrectResponse {lcCorrectResponse.attlist, lcCorrectResponse.content}
lcCorrectResponse.attlist &= lcCorrectResponse.attributes
lcSequence.content =  empty 
lcSequence.attributes = 
attribute name { text}?, 
attribute value { text}, univ-atts, 
attribute outputclass { text}?
lcSequence.element = 
element lcSequence {lcSequence.attlist, lcSequence.content}
lcSequence.attlist &= lcSequence.attributes
lcInstructornote.attlist &= global-atts, 
attribute class { text}?
lcTrueFalse.attlist &= global-atts, 
attribute class { text}?
lcSingleSelect.attlist &= global-atts, 
attribute class { text}?
lcMultipleSelect.attlist &= global-atts, 
attribute class { text}?
lcSequencing.attlist &= global-atts, 
attribute class { text}?
lcMatching.attlist &= global-atts, 
attribute class { text}?
lcHotspot.attlist &= global-atts, 
attribute class { text}?
lcOpenQuestion.attlist &= global-atts, 
attribute class { text}?
lcQuestion.attlist &= global-atts, 
attribute class { text}?
lcOpenAnswer.attlist &= global-atts, 
attribute class { text}?
lcAsset.attlist &= global-atts, 
attribute class { text}?
lcFeedback.attlist &= global-atts, 
attribute class { text}?
lcFeedbackCorrect.attlist &= global-atts, 
attribute class { text}?
lcFeedbackIncorrect.attlist &= global-atts, 
attribute class { text}?
lcAnswerOption.attlist &= global-atts, 
attribute class { text}?
lcAnswerOptionGroup.attlist &= global-atts, 
attribute class { text}?
lcAnswerContent.attlist &= global-atts, 
attribute class { text}?
lcMatchTable.attlist &= global-atts, 
attribute class { text}?
lcMatchingHeader.attlist &= global-atts, 
attribute class { text}?
lcMatchingPair.attlist &= global-atts, 
attribute class { text}?
lcItem.attlist &= global-atts, 
attribute class { text}?
lcMatchingItem.attlist &= global-atts, 
attribute class { text}?
lcMatchingItemFeedback.attlist &= global-atts, 
attribute class { text}?
lcSequenceOptionGroup.attlist &= global-atts, 
attribute class { text}?
lcSequenceOption.attlist &= global-atts, 
attribute class { text}?
lcSequence.attlist &= global-atts, 
attribute class { text}?
lcCorrectResponse.attlist &= global-atts, 
attribute class { text}?
lcHotspotMap.attlist &= global-atts, 
attribute class { text}?
lcArea.attlist &= global-atts, 
attribute class { text}?
lcAreaShape.attlist &= global-atts, 
attribute class { text}?
lcAreaCoords.attlist &= global-atts, 
attribute class { text}?