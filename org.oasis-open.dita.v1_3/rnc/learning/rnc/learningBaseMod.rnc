# 
# =============================================================
#                    HEADER                                    
# =============================================================
#  MODULE:    DITA learningBase                                
#  VERSION:   1.2                                              
#  DATE:      November 2009                                    
#                                                              
# =============================================================
# 
# =============================================================
#                    PUBLIC DOCUMENT TYPE DEFINITION           
#                    TYPICAL INVOCATION                        
#                                                              
#  Refer to this file by the following public identfier or an 
#       appropriate system identifier 
# PUBLIC "-//OASIS//ELEMENTS DITA Learning Base//EN"
#       Delivered as file "learningBase.mod"                        
# 
# =============================================================
# SYSTEM:     Darwin Information Typing Architecture (DITA)    
#                                                              
# PURPOSE:    Declaring the elements and specialization        
#             attributes for Learning Base                     
#                                                              
# ORIGINAL CREATION DATE:                                      
#             May 2007                                         
#                                                              
#             (C) Copyright OASIS Open 2007, 2009.             
#             All Rights Reserved.                             
#                                                              
#  CHANGE LOG:                                                 
#                                                              
#    Sept 2009: WEK: Make learningBasebody optional per        
#    TC decision.                                              
# =============================================================  
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace dita = "http://dita.oasis-open.org/architecture/2005/"

learningBasebody = learningBasebody.element
lcIntro = lcIntro.element
lcObjectives = lcObjectives.element
lcObjectivesStem = lcObjectivesStem.element
lcObjectivesGroup = lcObjectivesGroup.element
lcObjective = lcObjective.element
lcAudience = lcAudience.element
lcDuration = lcDuration.element
lcTime = lcTime.element
lcPrereqs = lcPrereqs.element
lcSummary = lcSummary.element
lcNextSteps = lcNextSteps.element
lcReview = lcReview.element
lcResources = lcResources.element
lcChallenge = lcChallenge.element
lcInstruction = lcInstruction.element
lcInteraction = lcInteraction.element
learningBase-info-types = info-types
learningBase.content = title, titlealts?, (shortdesc | abstract)?, prolog?, learningBasebody?, related-links?, learningBase-info-types*
learningBase.attributes = 
attribute id { xsd:ID}, conref-atts, select-atts, localization-atts, 
attribute outputclass { text}?
learningBase.element = 
element learningBase {learningBase.attlist, learningBase.content}
learningBase.attlist &= learningBase.attributes, arch-atts
learningBasebody.content = (lcAudience | lcChallenge | lcDuration | lcInstruction | lcInteraction | lcIntro | lcNextSteps | lcObjectives | lcPrereqs | lcResources | lcReview | lcSummary | section)*
learningBasebody.attributes = univ-atts, 
attribute outputclass { text}?
learningBasebody.element = 
element learningBasebody {learningBasebody.attlist, learningBasebody.content}
learningBasebody.attlist &= learningBasebody.attributes
lcIntro.content = section.cnt*
lcIntro.attributes = univ-atts, 
attribute spectitle { text}?, 
attribute outputclass { text}?
lcIntro.element = 
element lcIntro {lcIntro.attlist, lcIntro.content}
lcIntro.attlist &= lcIntro.attributes
lcObjectives.content = title?, lcObjectivesStem?, lcObjectivesGroup*
lcObjectives.attributes = univ-atts, 
attribute spectitle { text}?, 
attribute outputclass { text}?
lcObjectives.element = 
element lcObjectives {lcObjectives.attlist, lcObjectives.content}
lcObjectives.attlist &= lcObjectives.attributes
lcObjectivesStem.content = ph.cnt*
lcObjectivesStem.attributes = univ-atts, 
attribute outputclass { text}?
lcObjectivesStem.element = 
element lcObjectivesStem {lcObjectivesStem.attlist, lcObjectivesStem.content}
lcObjectivesStem.attlist &= lcObjectivesStem.attributes
lcObjectivesGroup.content = (data | data-about)*, lcObjective+
lcObjectivesGroup.attributes = univ-atts, 
attribute outputclass { text}?
lcObjectivesGroup.element = 
element lcObjectivesGroup {lcObjectivesGroup.attlist, lcObjectivesGroup.content}
lcObjectivesGroup.attlist &= lcObjectivesGroup.attributes
lcObjective.content = ph.cnt*
lcObjective.attributes = univ-atts, 
attribute outputclass { text}?
lcObjective.element = 
element lcObjective {lcObjective.attlist, lcObjective.content}
lcObjective.attlist &= lcObjective.attributes
lcAudience.content = section.cnt*
lcAudience.attributes = univ-atts, 
attribute spectitle { text}?, 
attribute outputclass { text}?
lcAudience.element = 
element lcAudience {lcAudience.attlist, lcAudience.content}
lcAudience.attlist &= lcAudience.attributes
lcDuration.content = title?, lcTime?
lcDuration.attributes = univ-atts, 
attribute spectitle { text}?, 
attribute outputclass { text}?
lcDuration.element = 
element lcDuration {lcDuration.attlist, lcDuration.content}
lcDuration.attlist &= lcDuration.attributes
lcTime.content = ph.cnt*
lcTime.attributes = 
attribute name { text}?, 
attribute datatype { text}?, 
attribute value { text}, univ-atts, 
attribute outputclass { text}?
lcTime.element = 
element lcTime {lcTime.attlist, lcTime.content}
lcTime.attlist &= lcTime.attributes
lcPrereqs.content = section.cnt*
lcPrereqs.attributes = 
attribute spectitle { text}?, univ-atts, 
attribute outputclass { text}?
lcPrereqs.element = 
element lcPrereqs {lcPrereqs.attlist, lcPrereqs.content}
lcPrereqs.attlist &= lcPrereqs.attributes
lcSummary.content = section.cnt*
lcSummary.attributes = 
attribute spectitle { text}?, univ-atts, 
attribute outputclass { text}?
lcSummary.element = 
element lcSummary {lcSummary.attlist, lcSummary.content}
lcSummary.attlist &= lcSummary.attributes
lcNextSteps.content = section.cnt*
lcNextSteps.attributes = 
attribute spectitle { text}?, univ-atts, 
attribute outputclass { text}?
lcNextSteps.element = 
element lcNextSteps {lcNextSteps.attlist, lcNextSteps.content}
lcNextSteps.attlist &= lcNextSteps.attributes
lcReview.content = section.cnt*
lcReview.attributes = 
attribute spectitle { text}?, univ-atts, 
attribute outputclass { text}?
lcReview.element = 
element lcReview {lcReview.attlist, lcReview.content}
lcReview.attlist &= lcReview.attributes
lcResources.content = section.cnt*
lcResources.attributes = 
attribute spectitle { text}?, univ-atts, 
attribute outputclass { text}?
lcResources.element = 
element lcResources {lcResources.attlist, lcResources.content}
lcResources.attlist &= lcResources.attributes
lcChallenge.content = section.cnt*
lcChallenge.attributes = 
attribute spectitle { text}?, univ-atts, 
attribute outputclass { text}?
lcChallenge.element = 
element lcChallenge {lcChallenge.attlist, lcChallenge.content}
lcChallenge.attlist &= lcChallenge.attributes
lcInstruction.content = section.cnt*
lcInstruction.attributes = 
attribute spectitle { text}?, univ-atts, 
attribute outputclass { text}?
lcInstruction.element = 
element lcInstruction {lcInstruction.attlist, lcInstruction.content}
lcInstruction.attlist &= lcInstruction.attributes
lcInteraction.content = (lcInteractionBase | lcInteractionBase2)*
lcInteraction.attributes = 
attribute spectitle { text}?, univ-atts, 
attribute outputclass { text}?
lcInteraction.element = 
element lcInteraction {lcInteraction.attlist, lcInteraction.content}
lcInteraction.attlist &= lcInteraction.attributes
learningBase.attlist &= global-atts, 
attribute class { text}?
learningBasebody.attlist &= global-atts, 
attribute class { text}?
lcIntro.attlist &= global-atts, 
attribute class { text}?
lcObjectives.attlist &= global-atts, 
attribute class { text}?
lcObjectivesStem.attlist &= global-atts, 
attribute class { text}?
lcObjectivesGroup.attlist &= global-atts, 
attribute class { text}?
lcObjective.attlist &= global-atts, 
attribute class { text}?
lcAudience.attlist &= global-atts, 
attribute class { text}?
lcDuration.attlist &= global-atts, 
attribute class { text}?
lcTime.attlist &= global-atts, 
attribute class { text}?
lcPrereqs.attlist &= global-atts, 
attribute class { text}?
lcSummary.attlist &= global-atts, 
attribute class { text}?
lcNextSteps.attlist &= global-atts, 
attribute class { text}?
lcReview.attlist &= global-atts, 
attribute class { text}?
lcResources.attlist &= global-atts, 
attribute class { text}?
lcChallenge.attlist &= global-atts, 
attribute class { text}?
lcInstruction.attlist &= global-atts, 
attribute class { text}?
lcInteraction.attlist &= global-atts, 
attribute class { text}?